package org.mikhnyukartemm.kotlincourse.lesson10

fun main() {

//Работа с Множествами Set
//Задание 1: Создание Пустого Множества
//Создайте пустое неизменяемое множество целых чисел.

    val set1 = setOf<Int>()
    println(set1)

//Задание 2: Создание и Инициализация Множества
//Создайте неизменяемое множество целых чисел, содержащее три различных элемента (например, 1, 2, 3).

    val set2 = setOf(1, 2, 3)
    println(set2)

//Задание 3: Создание Изменяемого Множества
//Создайте изменяемое множество строк и инициализируйте его несколькими значениями (например, "Kotlin", "Java", "Scala").

    val set3 = mutableSetOf("Kotlin", "Java", "Scala")
    println(set3)

//Задание 4: Добавление Элементов в Множество
//Имея изменяемое множество строк, добавьте в него новые элементы (например, "Swift", "Go").
    val set44 = mutableSetOf("Python", "Java", "Scala", "Kotlin")
    val set4 = set44
    set4.add("Swift")
    set4.add("Go")
    println(set4)

//Задание 5: Удаление Элементов из Множества
//Имея изменяемое множество целых чисел, удалите из него определенный элемент (например, 2).

    val set5 = mutableSetOf(1, 2, 3, 4, 5)
    set5.remove(2)
    println(set5)

//Задание 6: Перебор Множества в Цикле
//Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.

    val set6 = setOf(1, 2, 3, 4, 5)
    for (i in set6) {
        print("$i ")
    }
    println()
//Задание 7: Проверка Наличия Элемента в Множестве
//Создай функцию, которая принимает множество строк (set) и строку и проверяет, есть ли в множестве
//указанная строка. Нужно вернуть булево значение true если строка есть. Реши задачу через цикл.

    val set7 = setOf("Привет1", "Привет2", "Привет3", "привет4")
    fun privet(set7: Set<String>, privet: String): Boolean {
        for (i in set7) {
            if (privet in set7) {
                return true
            }
        }
        return false
    }
    println(privet(set7, "Привет0"))
    println(privet(set7, "привет4"))


//Задание 8: Объединение Двух Множеств
//Создайте два множества строк и объедините их в одно новое множество, содержащее все уникальные элементы обоих множеств.
// Реши задачу с помощью циклов.

    val set8 = setOf("privet1", "privet2")
    val set81 = setOf("privet3", "privet1")
    val set82 = mutableSetOf<String>()

    for (i in set8) {
        set82.add(i)
    }
    for (i in set81) {
        set82.add(i)
    }
    println(set82)

//Задание 9: Нахождение Пересечения Множеств
//Создайте два множества целых чисел и найдите их пересечение (общие элементы).
// Реши задачу через вложенные циклы.
    val set9 = setOf(1, 34, 3, 4, 88)
    val set91 = setOf(9, 88, 3, 20, 5)
    val set92 = mutableListOf<Int>()

    for (i in set9) {
        for (i1 in set91) {
            if (i == i1) {
                set92.add(i)
            }
        }
    }
    println(set92)

}